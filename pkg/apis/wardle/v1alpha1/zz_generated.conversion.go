//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	wardle "k8s.io/sample-apiserver/pkg/apis/wardle"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Application)(nil), (*wardle.Application)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Application_To_wardle_Application(a.(*Application), b.(*wardle.Application), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*wardle.Application)(nil), (*Application)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_wardle_Application_To_v1alpha1_Application(a.(*wardle.Application), b.(*Application), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ApplicationList)(nil), (*wardle.ApplicationList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ApplicationList_To_wardle_ApplicationList(a.(*ApplicationList), b.(*wardle.ApplicationList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*wardle.ApplicationList)(nil), (*ApplicationList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_wardle_ApplicationList_To_v1alpha1_ApplicationList(a.(*wardle.ApplicationList), b.(*ApplicationList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ApplicationSpec)(nil), (*wardle.ApplicationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ApplicationSpec_To_wardle_ApplicationSpec(a.(*ApplicationSpec), b.(*wardle.ApplicationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*wardle.ApplicationSpec)(nil), (*ApplicationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_wardle_ApplicationSpec_To_v1alpha1_ApplicationSpec(a.(*wardle.ApplicationSpec), b.(*ApplicationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ApplicationStatus)(nil), (*wardle.ApplicationStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ApplicationStatus_To_wardle_ApplicationStatus(a.(*ApplicationStatus), b.(*wardle.ApplicationStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*wardle.ApplicationStatus)(nil), (*ApplicationStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_wardle_ApplicationStatus_To_v1alpha1_ApplicationStatus(a.(*wardle.ApplicationStatus), b.(*ApplicationStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Application_To_wardle_Application(in *Application, out *wardle.Application, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ApplicationSpec_To_wardle_ApplicationSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ApplicationStatus_To_wardle_ApplicationStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Application_To_wardle_Application is an autogenerated conversion function.
func Convert_v1alpha1_Application_To_wardle_Application(in *Application, out *wardle.Application, s conversion.Scope) error {
	return autoConvert_v1alpha1_Application_To_wardle_Application(in, out, s)
}

func autoConvert_wardle_Application_To_v1alpha1_Application(in *wardle.Application, out *Application, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_wardle_ApplicationSpec_To_v1alpha1_ApplicationSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_wardle_ApplicationStatus_To_v1alpha1_ApplicationStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_wardle_Application_To_v1alpha1_Application is an autogenerated conversion function.
func Convert_wardle_Application_To_v1alpha1_Application(in *wardle.Application, out *Application, s conversion.Scope) error {
	return autoConvert_wardle_Application_To_v1alpha1_Application(in, out, s)
}

func autoConvert_v1alpha1_ApplicationList_To_wardle_ApplicationList(in *ApplicationList, out *wardle.ApplicationList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]wardle.Application)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_ApplicationList_To_wardle_ApplicationList is an autogenerated conversion function.
func Convert_v1alpha1_ApplicationList_To_wardle_ApplicationList(in *ApplicationList, out *wardle.ApplicationList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ApplicationList_To_wardle_ApplicationList(in, out, s)
}

func autoConvert_wardle_ApplicationList_To_v1alpha1_ApplicationList(in *wardle.ApplicationList, out *ApplicationList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Application)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_wardle_ApplicationList_To_v1alpha1_ApplicationList is an autogenerated conversion function.
func Convert_wardle_ApplicationList_To_v1alpha1_ApplicationList(in *wardle.ApplicationList, out *ApplicationList, s conversion.Scope) error {
	return autoConvert_wardle_ApplicationList_To_v1alpha1_ApplicationList(in, out, s)
}

func autoConvert_v1alpha1_ApplicationSpec_To_wardle_ApplicationSpec(in *ApplicationSpec, out *wardle.ApplicationSpec, s conversion.Scope) error {
	out.Version = in.Version
	out.Values = in.Values
	return nil
}

// Convert_v1alpha1_ApplicationSpec_To_wardle_ApplicationSpec is an autogenerated conversion function.
func Convert_v1alpha1_ApplicationSpec_To_wardle_ApplicationSpec(in *ApplicationSpec, out *wardle.ApplicationSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ApplicationSpec_To_wardle_ApplicationSpec(in, out, s)
}

func autoConvert_wardle_ApplicationSpec_To_v1alpha1_ApplicationSpec(in *wardle.ApplicationSpec, out *ApplicationSpec, s conversion.Scope) error {
	out.Version = in.Version
	out.Values = in.Values
	return nil
}

// Convert_wardle_ApplicationSpec_To_v1alpha1_ApplicationSpec is an autogenerated conversion function.
func Convert_wardle_ApplicationSpec_To_v1alpha1_ApplicationSpec(in *wardle.ApplicationSpec, out *ApplicationSpec, s conversion.Scope) error {
	return autoConvert_wardle_ApplicationSpec_To_v1alpha1_ApplicationSpec(in, out, s)
}

func autoConvert_v1alpha1_ApplicationStatus_To_wardle_ApplicationStatus(in *ApplicationStatus, out *wardle.ApplicationStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_ApplicationStatus_To_wardle_ApplicationStatus is an autogenerated conversion function.
func Convert_v1alpha1_ApplicationStatus_To_wardle_ApplicationStatus(in *ApplicationStatus, out *wardle.ApplicationStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ApplicationStatus_To_wardle_ApplicationStatus(in, out, s)
}

func autoConvert_wardle_ApplicationStatus_To_v1alpha1_ApplicationStatus(in *wardle.ApplicationStatus, out *ApplicationStatus, s conversion.Scope) error {
	return nil
}

// Convert_wardle_ApplicationStatus_To_v1alpha1_ApplicationStatus is an autogenerated conversion function.
func Convert_wardle_ApplicationStatus_To_v1alpha1_ApplicationStatus(in *wardle.ApplicationStatus, out *ApplicationStatus, s conversion.Scope) error {
	return autoConvert_wardle_ApplicationStatus_To_v1alpha1_ApplicationStatus(in, out, s)
}
